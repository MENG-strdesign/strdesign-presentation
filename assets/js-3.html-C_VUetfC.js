import{_ as e}from"./v8-Du6JQ9Zk.js";import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as a,o as n}from"./app-BgVWarju.js";const p="/strdesign-presentation/assets/image/js-3/update.jpg",r="/strdesign-presentation/assets/image/js-3/Update-1.jpg",o="/strdesign-presentation/assets/image/js-3/cpu.png",l="/strdesign-presentation/assets/image/js-3/chrome-v8.png",d="/strdesign-presentation/assets/image/js-3/pafomasu.png",g="/strdesign-presentation/assets/image/js-3/nodejsusefor.png",c="/strdesign-presentation/assets/image/js-3/MPA%E3%83%9E%E3%83%AB%E3%83%81%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E4%BB%95%E7%B5%84%E3%81%BF.jpg",m="/strdesign-presentation/assets/image/js-3/spa-2.png",h="/strdesign-presentation/assets/image/js-3/MPA%E3%81%AE%E8%AA%AC%E6%98%8E%E7%94%BB%E5%83%8F.png",v="/strdesign-presentation/assets/image/js-3/SPA%E3%81%AE%E8%AA%AC%E6%98%8E%E7%94%BB%E5%83%8F.png",f="/strdesign-presentation/assets/image/js-3/SPAvsMPA.jpg",j={};function y(u,t){return n(),i("div",null,t[0]||(t[0]=[a('<div style="display:flex;"><div style="flex:1;"><p>激しい市場競争とユーザー争奪戦の中で、<br> ブラウザメーカー各社は、自社ブラウザへの新機能の追加に<br> 全力を注いでいます。</p><p>しかし、当時のJavaScriptエンジンはシンプルで、JavaScriptの処理効率が低い。<br> Webアプリケーション日々複雑化により、ブラウザの動きも重くなりました。</p><p><strong>性能問題は、当時すべてのブラウザメーカーが直面せざるを得ない深刻な課題となっていました。</strong></p></div><div><figure><img src="'+p+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+r+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div></div><figure><img src="'+o+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="javascriptエンジン-google-v8-ヴィエイト-の誕生" tabindex="-1"><a class="header-anchor" href="#javascriptエンジン-google-v8-ヴィエイト-の誕生"><span>JavaScriptエンジン Google V8（ヴィエイト）の誕生</span></a></h2><div style="display:flex;"><div style="flex:1;"><p>2008年、Google開発したオープンソースのJavaScriptエンジンV8（ヴィエイト）が発表されました。<br> V8エンジンはC++で開発され、JavaScriptを直接マシンコードにコンパイルすることで、実行速度を大幅に向上させました。</p></div><div><figure><img src="'+l+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption>chrome-v8</figcaption></figure></div></div><div class="hint-container tip"><p class="hint-container-title">Google V8 とV型8気筒エンジン</p><div style="display:flex;"><div style="flex:1;"><p>この名称は、当時パフォーマンス最高峰のV型8気筒エンジン（略称「V8」）に由来しています。</p><p>同様に、「V8 JavaScriptエンジン」も、JavaScriptエンジンとして優れた性能を発揮することを目的に名付けられました。</p></div><div><figure><img src="'+e+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption>V型8気筒エンジン</figcaption></figure></div></div></div><h3 id="javascriptの実行速度の飛躍-ひやく-的な向上" tabindex="-1"><a class="header-anchor" href="#javascriptの実行速度の飛躍-ひやく-的な向上"><span>JavaScriptの実行速度の飛躍（ひやく）的な向上</span></a></h3><div style="display:flex;"><div style="flex:1;"><p>V8は従来のJavaScriptエンジンより<strong>圧倒的に速い実行速度</strong>を提供しました。これにより、ウェブアプリのパフォーマンスも大幅に向上し、<br> 昔は<strong>性能の問題で開発が放置されていたアイデア</strong>や、<strong>大規模なアプリケーションの構築</strong>が可能になりました。</p></div><div><figure><img src="'+d+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div></div><h2 id="性能向上によってweb開発の変革が引き起こされた" tabindex="-1"><a class="header-anchor" href="#性能向上によってweb開発の変革が引き起こされた"><span>性能向上によってWeb開発の変革が引き起こされた</span></a></h2><h3 id="変革1-node-jsの誕生によりサーバー側でもjavascriptで開発可能" tabindex="-1"><a class="header-anchor" href="#変革1-node-jsの誕生によりサーバー側でもjavascriptで開発可能"><span>変革1: Node.jsの誕生によりサーバー側でもJavaScriptで開発可能</span></a></h3><p>当時、JavaScript は主にクライアントサイドで使用されており、開発者はフロントエンドとバックエンドで異なる言語を使用する必要がありました。<br> Node.js はサーバーサイドのコードを JavaScript で記述できるようにすることで、<br><strong>フロントエンドとバックエンドの開発言語を統一させました。</strong><br><strong>開発プロセスが簡素化され、学習コストも大幅に低減しました。</strong></p><div class="hint-container tip"><p class="hint-container-title">軽量で高性能なサーバー</p><p>Node.js の設計理念の一つは「軽量で高速な動作」であり、これは Google V8 エンジンの高いパフォーマンスと非常に相性が良いです。<br> V8エンジンの高性能により、Node.js はServer Application（サーバーアプリケーション）を構築するための理想的な選択肢となっています。</p></div><h2 id="" tabindex="-1"><a class="header-anchor" href="#"><span><img src="'+g+'" alt="Alt" title=" " width="100%" loading="lazy"></span></a></h2><h3 id="変革2-シングルページアプリケーション-spa-の普及-ふきゅう" tabindex="-1"><a class="header-anchor" href="#変革2-シングルページアプリケーション-spa-の普及-ふきゅう"><span>変革2: シングルページアプリケーション（SPA）の普及（ふきゅう）</span></a></h3><ul><li><strong>従来のマルチページアプリケーション（MPA）の制限</strong></li></ul><p>従来のMPAでは、ユーザーがページと対話するたびにサーバーへのリクエストを送信し、ページ全体を再読み込みする必要がありました。<br> この方法はシンプルですが、毎回ページを再読み込みするため、ロード時間が長く、ユーザー体験が低下します。<br> 特に頻繁にページ遷移が必要なアプリケーションでは非効率です。</p><figure><img src="'+c+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption>MPAマルチアプリケーションの仕組み</figcaption></figure><ul><li><strong>SPA（シングルページアプリケーション）とは</strong></li></ul><div style="display:flex;"><div style="flex:1;"><p>「SPA」とは「Single Page Application」の略で、<br> １つのページで、スムーズにコンテンツ切り替えができる技術のことです。<br> 従来のページの読み込みでは、複数のページがあり、それを１ページづつアクセスし表示していく方法でした。<br> SPAでは、一度のアクセスでWebページの全体を取得した後、差分データのみを表示させることで、ページの高速化が期待できます。</p></div><div><figure><img src="'+m+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div></div><ul><li><strong>SPAとMPAの区別</strong></li></ul><p>SPAとMPAの区別は「ページ取得のサーバーへのアクセス回数」です。 SPAでは、一度サーバーにアクセスしたタイミングでWebページの全体を取得します。その後のページ切り替えは、差分データの情報のみを取得します。</p><p><img src="'+h+'" alt="Alt" title=" " width="50%" loading="lazy"><img src="'+v+'" alt="Alt" title=" " width="50%" loading="lazy"> SPAでは、一度サーバーにアクセスしたタイミングでWebページの全体を取得します。その後のページ切り替えは、差分データの情報のみを取得します。 一方、MPAの場合はページにアクセスする度、サーバーから一回ずつページを取得します。 上記を比較すると以下のようになります。</p><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">ページの取得数（1回）</th><th style="text-align:center;">サーバーへのアクセス回数（ページ単位）</th><th style="text-align:center;">取得データ（ページ単位）</th></tr></thead><tbody><tr><td style="text-align:center;">SPA</td><td style="text-align:center;">Webページ全体</td><td style="text-align:center;">1回</td><td style="text-align:center;">差分データのみ</td></tr><tr><td style="text-align:center;">MPA</td><td style="text-align:center;">1ページ</td><td style="text-align:center;">ページごとにサーバーへアクセス</td><td style="text-align:center;">1ページ分のデータ</td></tr></tbody></table><figure><img src="'+f+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',23)]))}const S=s(j,[["render",y],["__file","js-3.html.vue"]]),_=JSON.parse('{"path":"/javascript/js-3.html","title":"JavaScriptの第三戦 性能の戦い","lang":"ja-JP","frontmatter":{"title":"JavaScriptの第三戦 性能の戦い","icon":"rocket","navbar":false,"sidebar":false,"editLink":false,"lastUpdated":false,"pageInfo":false,"toc":false,"comment":false,"prev":"/javascript/js-2","next":"/javascript/js-4","order":3,"description":"激しい市場競争とユーザー争奪戦の中で、 ブラウザメーカー各社は、自社ブラウザへの新機能の追加に 全力を注いでいます。 しかし、当時のJavaScriptエンジンはシンプルで、JavaScriptの処理効率が低い。 Webアプリケーション日々複雑化により、ブラウザの動きも重くなりました。 性能問題は、当時すべてのブラウザメーカーが直面せざるを得ない深刻な...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/javascript/js-3.html"}],["meta",{"property":"og:title","content":"JavaScriptの第三戦 性能の戦い"}],["meta",{"property":"og:description","content":"激しい市場競争とユーザー争奪戦の中で、 ブラウザメーカー各社は、自社ブラウザへの新機能の追加に 全力を注いでいます。 しかし、当時のJavaScriptエンジンはシンプルで、JavaScriptの処理効率が低い。 Webアプリケーション日々複雑化により、ブラウザの動きも重くなりました。 性能問題は、当時すべてのブラウザメーカーが直面せざるを得ない深刻な..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/update.jpg \\" \\" =200x"}],["meta",{"property":"og:locale","content":"ja-JP"}],["meta",{"property":"og:updated_time","content":"2024-11-06T20:04:01.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-06T20:04:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaScriptの第三戦 性能の戦い\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/update.jpg \\\\\\" \\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/Update-1.jpg \\\\\\" \\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/cpu.png \\\\\\" \\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/chrome-v8.png \\\\\\"chrome-v8\\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/nodejs/v8.jpg \\\\\\"V型8気筒エンジン\\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/pafomasu.png \\\\\\" \\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/nodejsusefor.png \\\\\\" \\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/MPAマルチアプリケーションの仕組み.jpg \\\\\\"MPAマルチアプリケーションの仕組み\\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/spa-2.png \\\\\\" \\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/MPAの説明画像.png \\\\\\" \\\\\\" =50%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/SPAの説明画像.png \\\\\\" \\\\\\" =50%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-3/SPAvsMPA.jpg \\\\\\" \\\\\\" =100%x\\"],\\"dateModified\\":\\"2024-11-06T20:04:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.meng\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"JavaScriptエンジン Google V8（ヴィエイト）の誕生","slug":"javascriptエンジン-google-v8-ヴィエイト-の誕生","link":"#javascriptエンジン-google-v8-ヴィエイト-の誕生","children":[{"level":3,"title":"JavaScriptの実行速度の飛躍（ひやく）的な向上","slug":"javascriptの実行速度の飛躍-ひやく-的な向上","link":"#javascriptの実行速度の飛躍-ひやく-的な向上","children":[]}]},{"level":2,"title":"性能向上によってWeb開発の変革が引き起こされた","slug":"性能向上によってweb開発の変革が引き起こされた","link":"#性能向上によってweb開発の変革が引き起こされた","children":[{"level":3,"title":"変革1: Node.jsの誕生によりサーバー側でもJavaScriptで開発可能","slug":"変革1-node-jsの誕生によりサーバー側でもjavascriptで開発可能","link":"#変革1-node-jsの誕生によりサーバー側でもjavascriptで開発可能","children":[]}]},{"level":2,"title":"","slug":"","link":"#","children":[{"level":3,"title":"変革2: シングルページアプリケーション（SPA）の普及（ふきゅう）","slug":"変革2-シングルページアプリケーション-spa-の普及-ふきゅう","link":"#変革2-シングルページアプリケーション-spa-の普及-ふきゅう","children":[]}]}],"git":{"createdTime":1730738590000,"updatedTime":1730923441000,"contributors":[{"name":"MENG-strdesign","email":"meng@strdesign.ac","commits":1},{"name":"孟　瀚博","email":"meng@strdesign.ac","commits":1}]},"readingTime":{"minutes":2.03,"words":608},"filePathRelative":"javascript/js-3.md","localizedDate":"2024年11月4日","autoDesc":true}');export{S as comp,_ as data};
