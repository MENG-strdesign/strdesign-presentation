import{_ as s,a as n,b as r,c as l,d as p,e as o,f as g,g as d,h as c,i as u,j as m,k as h,l as f,m as v,n as A}from"./ranking-De8OamZK.js";import{_ as y}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,b as t,d as i,o as j,r as S}from"./app-CBGJ4HQW.js";const J="/strdesign-presentation/assets/image/js-4/spa.jpg",x={};function _(M,e){const a=S("SandPack");return j(),b("div",null,[e[0]||(e[0]=t('<div style="display:flex;"><div style="flex:1;"><p>SPAの登場により、フロントエンド技術は単なる静的なページ表示から、より複雑なクライアントサイドのロジックを処理する方向へ進化しました。<br> この変化によって、フロントエンドのフレームワークやライブラリが急速に発展し、開発者はより効率的にアプリケーションを作れるようになりました。</p></div><div><figure><img src="'+J+'" alt="Alt" width="300" tabindex="0" loading="lazy"><figcaption>Single Page Application</figcaption></figure></div></div><p>AngularJS（2010年）、React（2013年）、Vue.js（2014年）などのSPAフレームワークが登場し、<br> これらはより効率的なコンポーネントベースの開発方法を提供し、フロントエンド開発の能力強化とともに、フロントエンド開発の世界を変えました。</p><figure><img src="'+s+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption>Single Page Application</figcaption></figure><h2 id="🧰最初のspaフレームワーク" tabindex="-1"><a class="header-anchor" href="#🧰最初のspaフレームワーク"><span>🧰最初のSPAフレームワーク</span></a></h2><div style="display:flex;"><div style="flex:1;"><h3 id="angularjs" tabindex="-1"><a class="header-anchor" href="#angularjs"><span>AngularJS</span></a></h3><p>「AngularJS」は2010年Googleに開発され、主にシングルページアプリケーション（SPA）を作るためのフレームワークです。</p></div><div><figure><img src="'+n+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div></div><h3 id="🎖angularjsの主な特徴" tabindex="-1"><a class="header-anchor" href="#🎖angularjsの主な特徴"><span>🎖AngularJSの主な特徴</span></a></h3><ul><li><strong>🖇双方向データバインディング（Two-way Data Binding）</strong></li></ul><p>AngularJSは、双方向データバインディングを提供します。<br> これにより、ビュー(View)とモデル(model)は常に同期され、モデルのデータが変更されるとビューが自動的に更新され、<br> 逆にビューでのユーザー入力もモデルに反映されます。<br> この仕組みによって、開発者はデータの同期を手動で行う必要がなくなります。</p><figure><img src="'+r+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong>🛍️モジュール化（Modularization）</strong></li></ul><p>AngularJSは、アプリケーションを複数のモジュールに分割して開発することをサポートします。<br> これにより、テストやデバッグが容易になり、各モジュールは特定の機能を担当し、コードの保守性や再利用性が向上します。</p><figure><img src="'+l+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="💣angularjsの欠点" tabindex="-1"><a class="header-anchor" href="#💣angularjsの欠点"><span>💣AngularJSの欠点</span></a></h3><ul><li><strong>📈パフォーマンスの問題</strong><br> 双方向データバインディングは便利ですが、大規模アプリケーションではパフォーマンスに影響を与えることがありました。<br> 特に、データ量が増えると「ダーティチェック」という仕組みが頻繁に発生し、レスポンス速度が低下します。<br> すべてのバインディングされたプロパティを監視し、変更をマージするため、リソースの消費が激しくなります。</li></ul><div class="hint-container tip"><p class="hint-container-title">ダーティチェック</p><p>「ダーティチェック」とは、AngularJS がデータの変更を検出するための方法です。<br> データが変更されたかどうかを確認するため、すべての監視対象（変数やプロパティなど）を何度もチェックします。<br> この仕組みによって、データが自動的に画面に反映されますが、ページ上の項目が増えるとチェック回数も増る。アプリの動作が遅くなる要因となります。</p></div><ul><li><p><strong>⌛️高い学習コスト</strong><br> AngularJS には作用域（scope）、依存関係の注入、モジュール化など多くの概念が含まれており、初心者にとって学習コストが高く、習得に時間がかかります。<br> このため、学び始めたの開発者にとっては、難しく感じることが多いです。</p></li><li><p><strong>🔏柔軟性の制限</strong><br> AngularJS は特定の規約に従う必要があり、フレームワークの提供された使え方に逆に縛られる部分があります。</p></li><li><p><strong>🔎デバッグの難しさ</strong><br> 双方向データバインディングや複雑なスコープ構造のため、データ更新のエラーを見つけるのが難しい場合があります。</p></li><li><p><strong>📱モバイル対応の不足</strong></p></li><li><p><strong>📊モダンな JavaScript 機能のサポート不足</strong></p></li></ul><p>AngularJS にはいくつかの欠点がありますが、その優れた設計理念は後のフレームワークに深い影響を与えました。</p><h2 id="🏵-強敵の登場" tabindex="-1"><a class="header-anchor" href="#🏵-強敵の登場"><span>🏵 強敵の登場</span></a></h2><div style="display:flex;"><div style="flex:1;"><h3 id="react" tabindex="-1"><a class="header-anchor" href="#react"><span>React</span></a></h3><p>Reactとは、ユーザインターフェース構築のための JavaScript ライブラリです。<br> React.jsやReact.JSと呼ばれることもあります。よくAngularJSやjQueryと比較されますが、React自体はフレームワークでなく、あくまでもUIを構築するだけのライブラリです。</p></div><div><figure><img src="'+p+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div></div><div style="display:flex;"><div style="flex:1;"><ul><li><strong>起源（2011年頃）</strong><br> ReactはFacebookのエンジニアであるJordan Walkeによって開発され、最初はFacebook内部で動的なインターフェース構築の簡単化のために使用されました。</li></ul></div><div><figure><img src="'+o+'" alt="Alt" width="200" tabindex="0" loading="lazy"><figcaption>Facebook</figcaption></figure></div></div><ul><li><strong>公開（2013年）</strong><br> 2013年のJSConfで、Facebookは正式にReactのコードをオープンソースとして公開しました。<br> この時、Reactの「コンポーネント化」や「仮想DOM」などの概念は、フロントエンドの分野における新しい技術と宣言され、UIの更新効率とパフォーマンスを強調しました。</li></ul><div class="hint-container tip"><p class="hint-container-title">JSConf（JavaScript Conference）</p><div style="display:flex;"><div style="flex:1;"><p>JSConfとは、世界中のJavaScript開発者や技術者、企業が集まる技術交流イベントです。</p><p>JavaScriptの最新の動向や技術について議論し、共有することを目的としています。</p></div><div><figure><img src="'+g+'" alt="Alt" width="300" tabindex="0" loading="lazy"><figcaption>JSConf会場</figcaption></figure></div></div></div><h3 id="💡angularjs-と比較して、react-の強みは何ですか" tabindex="-1"><a class="header-anchor" href="#💡angularjs-と比較して、react-の強みは何ですか"><span>💡AngularJS と比較して、React の強みは何ですか？</span></a></h3><ul><li><strong>仮想 DOM（Virtual DOM）</strong><br> React の最も重要な強みの一つは「仮想 DOM」の概念です。 AngularJS では双方向データバインディングを使用しているため、データが増える場合はパフォーマンス低下の問題が存在します。<br><img src="'+d+'" alt="Alt" title="AngularJSのDOM操作" width="100%" loading="lazy"></li></ul><div class="hint-container tip"><p class="hint-container-title">DOMの概念（Document Object Model）</p><p>DOMとは、ウェブページの構造を表現するためのプログラミングインターフェースであり、 HTMLやXML文書をツリー構造で表現したものです。</p><figure><img src="'+c+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption>DOMの概念</figcaption></figure></div><p>仮想 DOM は、UI の変更があるたびに実際の DOM を直接更新するのではなく、まず仮想的な DOM を更新し、その差分だけを実際の DOM に反映させます。<br><strong>これにより、UI の更新が効率的に行われ、パフォーマンスが大幅に向上します。</strong></p><figure><img src="'+u+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption>　</figcaption></figure><figure><img src="'+m+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption>Reactの仮想DOM</figcaption></figure><ul><li><p><strong>柔軟性</strong><br> React はライブラリであり、フレームワークではないため、必要な機能だけを追加して使用することができます。<br> これにより、プロジェクトに応じて柔軟に設計を変更でき、さまざまなユースケースに対応することが可能です。</p></li><li><p><strong>Component-based architecture（コンポーネントベースのアーキテクチャ）</strong><br> こうして見ると、これは全く新しい概念ではありません。<br> すべてのページは、事前に作られた小さな部品（コンポーネント）で構成されており、<br> まるで、ページ自体が複数のiframeで組み立てられているのようです。<br> 唯一の違いは、これらの部品にパラメータを渡すことで、外観や動きの変更ができることです。</p></li></ul><figure><img src="'+h+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><strong>JSX（JavaScript XML）</strong><br> React では JSX という <strong>HTMLとJavaScriptを統合した構文</strong>を使って、HTML と JavaScript を同じファイル内で記述することができます。</li></ul><p><strong>👍🏼肯定的（こうてい）な評価：</strong><br> 開発効率の向上：共通部品（コンポーネント）を構築する時、UIコードとロジックが同じファイル内でUIを定義され、その動作を管理するができます。<br> 宣言型プログラミング：JSXはUIの宣言的な記述を可能にします。開発者は「どうすべきか」を宣言し、Reactがその更新を処理するため、より直感的なコードになります。</p><p><strong>👎🏼否定的（ひてい）な評価：</strong><br> 開発者にとって、JSXは複雑に感じることがあり、特にコンパイルや変換プロセスを理解するのが難しいと感じることもあります。</p>',33)),i(a,{rtl:"",theme:"dark",title:"JSX%E3%81%AE%E4%BE%8B%20",template:"react",files:"eJyrVtJ3LCjQyypWslJKrSjILypRSElNSyzNKVFIK81LLsnMz1MAKtDQVKiOyVNQKEotKS3KU9AAsRUUbFIyy+wgTAWFan0tBa/gCIUnO9Y+blz3uGnz4+aFj5uBZMfjpkWPm5YBGQpa+rUw5TYZhnYeqTk5+Qrl+UU5KTb6QD7UVH2YsZrWMXlADUq1AKucPEM=",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrrgUAAXUA+Q=="}),e[1]||(e[1]=t('<p><strong>結論：</strong><br> 異なる開発者によってJSXに対する見解は異なりますが、「JSX」は現代のフロントエンド開発において重要な役割を果たす技術の一つであることは間違いありません。</p><h2 id="🌟新星の誕生-vue-js" tabindex="-1"><a class="header-anchor" href="#🌟新星の誕生-vue-js"><span>🌟新星の誕生　Vue.js</span></a></h2><h3 id="尤-雨溪-evan-you-エヴァン-ユー" tabindex="-1"><a class="header-anchor" href="#尤-雨溪-evan-you-エヴァン-ユー"><span>尤 雨溪（Evan You）エヴァン ユー</span></a></h3><div style="display:flex;"><div style="flex:1;"><p>元々は Google に所属していたエンジニアです。<br> 彼は Google での勤務中に、AngularJS とReactを使っていた経験があり、そこで得た知識を基に、さらにシンプルで使いやすいフレームワークを作ろうと考えました。<br> 最初は個人のプロジェクトとして開発され、2014 年に正式公開しました。</p></div><div><figure><img src="'+f+'" alt="Alt" width="250" tabindex="0" loading="lazy"><figcaption>尤雨溪（Evan You）</figcaption></figure></div></div><h3 id="🎯vue-js-の特徴" tabindex="-1"><a class="header-anchor" href="#🎯vue-js-の特徴"><span>🎯Vue.js の特徴：</span></a></h3><ul><li><p><strong>軽量で柔軟</strong><br> Vue.js は非常に軽量であり、必要な部分だけを選んで使用することができる柔軟性を提供します。これにより、プロジェクトの規模や要件に合わせた適切な使い方が可能です。</p></li><li><p><strong>AngularJSの強みを吸収　優れた性能を持つ双方向データバインディング技術</strong><br> Vue.jsは依存関係追跡（dependency tracking）という仕組みを使用して、データの変更を効率的に管理します。<br> 具体的には、Vue はデータの依存関係を追跡し、必要なときだけ DOM を更新する。</p></li></ul>',6)),i(a,{title:"Vue.js%E5%8F%8C%E6%96%B9%E5%90%91%E3%83%87%E3%83%BC%E3%82%BF%E3%83%90%E3%82%A4%E3%83%B3%E3%83%87%E3%82%A3%E3%83%B3%E3%82%B0%E6%8A%80%E8%A1%93",template:"vue",files:"eJxNjD0OwjAMRq9iPMEAESuESmyMHMBL1aalUv6UOJVQlLtjysL4/D2/iiqnQd1jPK3F4AV1HtISGbLhEjvyi4shMVRIZoIGUwoOCMUlvJInPwSfGVye4fZV9oQPY22Ap+3fcwrFjzvCg6ha/crSFGDjou3ZCAHo17mrdYu0ppXQdl18LAzr0YXR2Buh7ISgZNTq7x/bB3CyQ8s=",options:"eJyrrgUAAXUA+Q==",customSetup:"eJyrrgUAAXUA+Q=="}),e[2]||(e[2]=t('<ul><li><p><strong>Reactの強みを吸収　仮想 DOM（Virtual DOM）技術</strong><br> Vueの仮想 DOM は、リアクティブシステムと組み合わせて効率的な更新を実現しています。<br> データが変更されると、Vue はそのデータに依存しているコンポーネントを自動的に追跡し、再描画が必要なコンポーネントのみを更新します。<br> この仕組みにより、必要な部分のみを更新することで、DOM の更新を最小限に抑え、パフォーマンスを更に向上させることができます。</p></li><li><p><strong>学習コストが低い</strong><br> React は JSX（JavaScript XML）という独自の構文を使用しており、HTMLとJavaScriptが組み合わさっているため、初めて触る人にとっては少し分かりにくい部分があります。<br> Vue は、HTMLに近いテンプレート構文を採用しており、視覚的に理解しやすく、初心者にとっては優しい印象があります。</p></li></ul><h2 id="こうして、三つの勢力が並び立つことが形成されました。" tabindex="-1"><a class="header-anchor" href="#こうして、三つの勢力が並び立つことが形成されました。"><span>こうして、三つの勢力が並び立つことが形成されました。</span></a></h2><figure><img src="'+v+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+A+'" alt="Alt" width="100%" tabindex="0" loading="lazy"><figcaption>2023年間Front-end Frameworks</figcaption></figure>',4))])}const E=y(x,[["render",_],["__file","js-4.html.vue"]]),O=JSON.parse('{"path":"/javascript/js-4.html","title":"第四戦 SPA frameworksの戦い","lang":"ja-JP","frontmatter":{"title":"第四戦 SPA frameworksの戦い","icon":"rocket","navbar":false,"sidebar":false,"editLink":false,"lastUpdated":false,"pageInfo":false,"toc":false,"comment":false,"prev":"/javascript/js-3","next":"/javascript/js-5","order":4,"description":"SPAの登場により、フロントエンド技術は単なる静的なページ表示から、より複雑なクライアントサイドのロジックを処理する方向へ進化しました。 この変化によって、フロントエンドのフレームワークやライブラリが急速に発展し、開発者はより効率的にアプリケーションを作れるようになりました。 AltSingle Page Application AngularJS（2...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/javascript/js-4.html"}],["meta",{"property":"og:title","content":"第四戦 SPA frameworksの戦い"}],["meta",{"property":"og:description","content":"SPAの登場により、フロントエンド技術は単なる静的なページ表示から、より複雑なクライアントサイドのロジックを処理する方向へ進化しました。 この変化によって、フロントエンドのフレームワークやライブラリが急速に発展し、開発者はより効率的にアプリケーションを作れるようになりました。 AltSingle Page Application AngularJS（2..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/spa.jpg \\"Single Page Application\\" =300x"}],["meta",{"property":"og:locale","content":"ja-JP"}],["meta",{"property":"og:updated_time","content":"2024-11-07T19:38:11.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-07T19:38:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第四戦 SPA frameworksの戦い\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/spa.jpg \\\\\\"Single Page Application\\\\\\" =300x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/spafrm.png \\\\\\"Single Page Application\\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/AngularJS.png \\\\\\" \\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/data_binding_two_way.png \\\\\\" \\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/modular.jpg \\\\\\" \\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/ReactJS.png \\\\\\" \\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/facebook.jpg \\\\\\"Facebook\\\\\\" =200x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/JsConf.jpg \\\\\\"JSConf会場\\\\\\" =300x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/DOM1.png \\\\\\"AngularJSのDOM操作\\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/DOM.png \\\\\\"DOMの概念\\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/仮想DOM1.png \\\\\\"　\\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/仮想DOM2.png \\\\\\"Reactの仮想DOM\\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/react组件.jpeg \\\\\\" \\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/尤雨溪.png \\\\\\"尤雨溪（Evan You）\\\\\\" =250x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/Angular__React__and_Vue.js-Front-end_Framework_Comparison.png \\\\\\" \\\\\\" =100%x\\",\\"https://vuepress-theme-hope-docs-demo.netlify.app/strdesign-presentation/assets/image/js-4/ranking.png \\\\\\"2023年間Front-end Frameworks\\\\\\" =100%x\\"],\\"dateModified\\":\\"2024-11-07T19:38:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.meng\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"🧰最初のSPAフレームワーク","slug":"🧰最初のspaフレームワーク","link":"#🧰最初のspaフレームワーク","children":[{"level":3,"title":"AngularJS","slug":"angularjs","link":"#angularjs","children":[]},{"level":3,"title":"🎖AngularJSの主な特徴","slug":"🎖angularjsの主な特徴","link":"#🎖angularjsの主な特徴","children":[]},{"level":3,"title":"💣AngularJSの欠点","slug":"💣angularjsの欠点","link":"#💣angularjsの欠点","children":[]}]},{"level":2,"title":"🏵 強敵の登場","slug":"🏵-強敵の登場","link":"#🏵-強敵の登場","children":[{"level":3,"title":"React","slug":"react","link":"#react","children":[]},{"level":3,"title":"💡AngularJS と比較して、React の強みは何ですか？","slug":"💡angularjs-と比較して、react-の強みは何ですか","link":"#💡angularjs-と比較して、react-の強みは何ですか","children":[]}]},{"level":2,"title":"🌟新星の誕生　Vue.js","slug":"🌟新星の誕生-vue-js","link":"#🌟新星の誕生-vue-js","children":[{"level":3,"title":"尤 雨溪（Evan You）エヴァン ユー","slug":"尤-雨溪-evan-you-エヴァン-ユー","link":"#尤-雨溪-evan-you-エヴァン-ユー","children":[]},{"level":3,"title":"🎯Vue.js の特徴：","slug":"🎯vue-js-の特徴","link":"#🎯vue-js-の特徴","children":[]}]},{"level":2,"title":"こうして、三つの勢力が並び立つことが形成されました。","slug":"こうして、三つの勢力が並び立つことが形成されました。","link":"#こうして、三つの勢力が並び立つことが形成されました。","children":[]}],"git":{"createdTime":1730738590000,"updatedTime":1731008291000,"contributors":[{"name":"孟　瀚博","email":"meng@strdesign.ac","commits":2},{"name":"MENG-strdesign","email":"meng@strdesign.ac","commits":1}]},"readingTime":{"minutes":4.07,"words":1220},"filePathRelative":"javascript/js-4.md","localizedDate":"2024年11月4日","autoDesc":true}');export{E as comp,O as data};
